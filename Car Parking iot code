#include <Servo.h>
#include <LiquidCrystal.h>

// กำหนดขาเชื่อมต่อกับจอ LCD (RS, E, D4, D5, D6, D7)
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);

// กำหนดขาของเซนเซอร์อัลตราโซนิก
#define t1 10
#define t2 9
#define t3 8
#define t4 7
#define t5 13

Servo myservo;

int distanceThreshold = 100;     // ระยะตรวจจับขั้นต่ำ
int parkingAvailable = 3;        // จำนวนที่จอดว่าง (เริ่มต้นมี 3 ช่อง)
int barrierState = 0;            // สถานะของไม้กั้น

void setup() {
  lcd.begin(16, 2);              // เริ่มต้นใช้งานจอ LCD ขนาด 16x2
  lcd.setCursor(0, 0);
  Serial.begin(9600);            // เริ่มต้น Serial Monitor
  myservo.attach(6);             // เชื่อมต่อเซอร์โวมอเตอร์กับขา 6
  myservo.write(0);              // เริ่มต้นให้ไม้กั้นอยู่ที่ตำแหน่งปิด
}

// ฟังก์ชันอ่านค่าระยะจากเซนเซอร์อัลตราโซนิก
long readDistance(int triggerPin, int echoPin) {
  pinMode(triggerPin, OUTPUT); 
  digitalWrite(triggerPin, LOW);
  delayMicroseconds(2);
  digitalWrite(triggerPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(triggerPin, LOW);
  pinMode(echoPin, INPUT);
  return pulseIn(echoPin, HIGH);
}

void loop() {
  // อ่านค่าระยะจากเซนเซอร์ทั้งหมด
  float d1 = 0.01723 * readDistance(t1, t1);
  float d2 = 0.01723 * readDistance(t2, t2);
  float d3 = 0.01723 * readDistance(t3, t3);
  float d4 = 0.01723 * readDistance(t4, t4);
  float d5 = 0.01723 * readDistance(t5, t5);

  // แสดงค่าระยะทั้งหมดใน Serial Monitor
  Serial.println("d1 = " + String(d1) + "cm");
  Serial.println("d2 = " + String(d2) + "cm");
  Serial.println("d3 = " + String(d3) + "cm");
  Serial.println("d4 = " + String(d4) + "cm");
  Serial.println("d5 = " + String(d5) + "cm");

  /*
    คำอธิบายเกี่ยวกับสถานะของไม้กั้น (barrierState):
    
    0  = ไม้กั้นปิด
    -1 = ไม้กั้นเปิดเพื่อให้รถเข้า
     1 = ไม้กั้นเปิดเพื่อให้รถออก
    -2 = ไม้กั้นปิดหลังจากที่รถเข้าแล้ว
     2 = ไม้กั้นปิดหลังจากที่รถออกแล้ว

    เมื่อสถานะ = -2 หรือ 2 แล้วตรวจไม่พบรถอีก จะรีเซตกลับเป็น 0

    เงื่อนไขที่ให้รถเข้า:
    - ตรวจพบรถที่ d4
    - ไม่พบรถที่ d5
    - ที่จอดรถยังว่างอยู่

    เงื่อนไขที่ให้รถออก:
    - ตรวจพบรถที่ d5
    - ไม่พบรถที่ d4
    - มีรถจอดอยู่ (ช่องไม่เต็ม)
  */

  if (barrierState == 0) {
    if (d4 < 100 && d5 >= 100 && parkingAvailable > 0) {
      parkingAvailable -= 1;
      barrierState = -1;
      myservo.write(90); // เปิดไม้กั้นให้รถเข้า
    }

    if (d4 >= 100 && d5 < 100 && parkingAvailable < 3) {
      parkingAvailable += 1;
      barrierState = 1;
      myservo.write(90); // เปิดไม้กั้นให้รถออก
    }
  }

  else if (barrierState == -1) {
    if (d4 >= 100 && d5 < 100) {
      barrierState = -2;
      myservo.write(0); // ปิดไม้กั้นหลังรถเข้า
    }
  }

  else if (barrierState == 1) {
    if (d5 >= 100 && d4 < 100) {
      barrierState = 2;
      myservo.write(0); // ปิดไม้กั้นหลังรถออก
    }
  }

  else if (barrierState == -2) {
    if (d5 >= 100) {
      barrierState = 0; // รีเซตสถานะไม้กั้น
    }
  }

  else if (barrierState == 2) {
    if (d4 >= 100) {
      barrierState = 0; // รีเซตสถานะไม้กั้น
    }
  }

  /*
    แสดงผลบนหน้าจอ LCD:

    แถวบน: แสดงจำนวนช่องจอดว่าง หรือข้อความ "Parking Full"
    แถวล่าง: บอกว่าสล็อตไหนว่าง เพื่อให้ผู้ใช้รู้ว่าควรไปจอดช่องไหน
  */

  lcd.setCursor(0, 0);
  if (parkingAvailable == 0) {
    lcd.print("Parking Full  ");
  } else {
    lcd.print("Parking left ");
    lcd.print(parkingAvailable);
  }

  lcd.setCursor(0, 1);
  if (d1 > 100 && d2 > 100 && d3 > 100) {
    lcd.print("Slot 1 2 3 Free");
  } else if ((d1 > 100 && d2 > 100) || (d2 > 100 && d3 > 100) || (d3 > 100 && d1 > 100)) {
    if (d1 > 100 && d2 > 100)
      lcd.print("Slot 1 & 2 Free");
    else if (d1 > 100 && d3 > 100)
      lcd.print("Slot 1 & 3 Free");
    else
      lcd.print("Slot 2 & 3 Free");
  } else if (d1 < 100 && d2 < 100 && d3 < 100) {
    lcd.print("Parking Full   ");
  } else if ((d1 < 100 && d2 < 100) || (d2 < 100 && d3 < 100) || (d3 < 100 && d1 < 100)) {
    if (d1 > 100)
      lcd.print("Slot 1 is Free ");
    else if (d2 > 100)
      lcd.print("Slot 2 is Free ");
    else
      lcd.print("Slot 3 is Free ");
  }

  delay(100);
}
